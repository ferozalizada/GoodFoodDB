-- Restaurant and menu queries

-- a
SELECT *
FROM RESTAURANT AS RES NATURAL INNER JOIN LOCATION AS LOC
WHERE RES.RESTAURANTID = USER_SPECIFIED_id;

SELECT *
FROM RESTAURANT AS RES NATURAL INNER JOIN LOCATION AS LOC
WHERE RES.NAME = chosen_name;

-- b
SELECT RES.NAME,MI.NAME,MI.TYPE,MI.CATEGORY,MI.DESCRIPTION,MI.PRICE
FROM MENUITEM AS MI INNER JOIN RESTAURANT AS RES ON MI.RESTAURANTID = RES.RESTAURANTID
WHERE RES.NAME = USER_SPECIFIED_name
ORDER BY MI.CATEGORY;

-- c
SELECT RES.NAME,TYPE,HOUR_OPEN,HOUR_CLOSE,STREET_ADDRESS,PHONE_NUMBER,MANAGER_NAME,FIRSTOPEN_DATE
FROM RESTAURANT AS RES NATURAL INNER JOIN LOCATION AS LOC
WHERE RES.TYPE = USER_SPECIFIED_tp;

-- d
SELECT RES.NAME,MAX(PRICE) AS MAX_PRICE,MANAGER_NAME,HOUR_OPEN,HOUR_CLOSE,HOUR_CLOSE
FROM MENUITEM AS MI  INNER JOIN RESTAURANT AS RES ON MI.RESTAURANTID = RES.RESTAURANTID INNER JOIN LOCATION AS LOC ON RES.RESTAURANTID = LOC.RESTAURANTID
GROUP BY RES.NAME,MANAGER_NAME,HOUR_OPEN,HOUR_CLOSE,HOUR_CLOSE;

-- e
SELECT RES.TYPE,MI.CATEGORY,round( AVG(PRICE), 2) AS Average_Price
FROM MENUITEM AS MI  INNER JOIN RESTAURANT AS RES ON MI.RESTAURANTID = RES.RESTAURANTID
GROUP BY RES.TYPE,MI.CATEGORY;

-- Ratings and Restaurant

-- f
SELECT RATER.NAME,RESTAURANT.NAME,round(AVG(RATING.FOOD+RATING.MOOD+RATING.PRICE+RATING.STAFF)/4, 2) AS average_rating, COUNT(RESTAURANT.RESTAURANTID) as num_reviews
FROM RESTAURANT INNER JOIN RATING ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID INNER JOIN RATER on RATING.USERID = RATER.USERID
GROUP BY RATER.NAME,RESTAURANT.NAME
order by num_reviews DESC, average_rating DESC;

-- g
SELECT DISTINCT RES.NAME,RES.TYPE,LOC.PHONE_NUMBER
FROM RESTAURANT AS RES NATURAL INNER JOIN LOCATION AS LOC INNER JOIN MENUITEM AS MI on RES.RESTAURANTID = MI.RESTAURANTID
WHERE MI.ITEMID IN (SELECT ITEMID FROM RATINGITEM WHERE (DATE >= '01/01/2015' OR DATE <= '31/01/2015'));

-- h
SELECT DISTINCT RES.NAME,LOC.HOUR_OPEN,LOC.HOUR_CLOSE
FROM RESTAURANT AS RES NATURAL INNER JOIN LOCATION AS LOC INNER JOIN RATING AS RA ON RA.RESTAURANTID = RES.RESTAURANTID
WHERE RA.STAFF <= (SELECT MIN(PRICE) FROM RATING WHERE USERID = '15')
AND RA.STAFF <= (SELECT MIN(MOOD) FROM RATING WHERE USERID = '15')
AND RA.STAFF <= (SELECT MIN(FOOD) FROM RATING WHERE USERID = '15')
AND RA.STAFF <= (SELECT MIN(STAFF) FROM RATING WHERE USERID = '15');

-- i
SELECT DISTINCT R1.*,L.*
FROM RESTAURANT AS R1 INNER JOIN LOCATION L on R1.RESTAURANTID = L.RESTAURANTID INNER JOIN RATING AS RA on RA.RESTAURANTID = R1.RESTAURANTID
WHERE R1.TYPE = 'Fast Food' AND RA.FOOD = (SELECT MAX(FOOD)
																			     FROM RESTAURANT AS R2 INNER JOIN RATING AS RA1 on R2.RESTAURANTID = RA1.RESTAURANTID
                                           WHERE R2.TYPE = 'Fast Food')
ORDER BY R1.RESTAURANTID;

-- j POPULARITY IS BASED ON NUMBER OF REVIEWS
SELECT TYPE, COUNT(*) AS TOTAL_REVIEWS
FROM RESTAURANT NATURAL INNER JOIN RATING
GROUP BY TYPE
ORDER BY TOTAL_REVIEWS DESC;

-- k
SELECT RAT.NAME,RAT.JOIN_DATE,RAT.REPUTATION,AVG(R.FOOD+R.MOOD)/2 AS AVG_FOOD_MOOD, RES.NAME, R.DATE
FROM RATER AS RAT INNER JOIN RATING AS R ON RAT.USERID = R.USERID INNER JOIN RESTAURANT AS RES ON R.RESTAURANTID = RES.RESTAURANTID
GROUP BY RAT.NAME,RAT.JOIN_DATE,RAT.REPUTATION,RES.NAME, R.DATE
HAVING AVG(R.FOOD+R.MOOD)/2 > 4
ORDER BY RAT.REPUTATION DESC,RAT.NAME;

-- l
SELECT R.NAME,R.REPUTATION,RES.NAME, RAT.MOOD, RAT.FOOD ,RAT.DATE
FROM RATING AS RAT INNER JOIN RESTAURANT AS RES ON RAT.RESTAURANTID = RES.RESTAURANTID INNER JOIN RATER R ON RAT.USERID = R.USERID
WHERE (RAT.USERID IN (SELECT USERID FROM RATING WHERE RAT.FOOD >= 4)
    OR RAT.USERID IN (SELECT USERID FROM RATING WHERE RAT.MOOD >= 4));

-- m
SELECT R2.NAME,R2.REPUTATION,R3.COMMENTS,M.NAME,R.COMMENTS,M.PRICE
FROM MENUITEM M INNER JOIN RATINGITEM R on M.ITEMID = R.ITEMID
	INNER JOIN RATER R2 on R.USERID = R2.USERID
	INNER JOIN RATING R3 on R.DATE = R3.DATE
	INNER JOIN RESTAURANT R4 on M.RESTAURANTID = R4.RESTAURANTID
WHERE R4.RESTAURANTID = '1' AND R3.USERID IN
  (SELECT Y.USERID
    FROM (SELECT R.USERID, COUNT(RATING.USERID) AS num
            FROM RATING INNER JOIN RESTAURANT ON RATING.RESTAURANTID = RESTAURANT.RESTAURANTID INNER JOIN RATER R on RATING.USERID = R.USERID
			 	  	WHERE RESTAURANT.RESTAURANTID = '1'
				  	GROUP BY R.USERID
				 		ORDER BY num DESC
				 		LIMIT 1) y);

-- n
SELECT DISTINCT R.NAME,R.EMAIL,R2.PRICE+R2.FOOD+R2.STAFF+R2.MOOD/4 as rating_
FROM RATER R NATURAL INNER JOIN RATING R2
WHERE R2.PRICE+R2.FOOD+R2.STAFF+R2.MOOD/4 <
			(SELECT MAX(R2.PRICE+R2.FOOD+R2.STAFF+R2.MOOD)/4 AS AVG_RATING
			FROM RATER R NATURAL INNER JOIN RATING R2
			WHERE R.NAME = 'John'
			ORDER BY AVG_RATING DESC
			LIMIT 1);

-- o
SELECT R.NAME,R.TYPE,R.EMAIL,R2.PRICE,R2.FOOD,R2.MOOD,R2.STAFF,R2.DATE,R3.NAME
FROM RATER R NATURAL INNER JOIN RATING R2 INNER JOIN RESTAURANT R3 ON R2.RESTAURANTID = R3.RESTAURANTID
WHERE (SELECT MAX(FOOD) -
							(SELECT MIN(FOOD)
							 FROM RATING
							 WHERE RATING.USERID = R.USERID
										 AND R3.RESTAURANTID = RATING.RESTAURANTID)
			 FROM RATING
			 WHERE RATING.USERID = R.USERID
						 AND R3.RESTAURANTID = RATING.RESTAURANTID) >= 2
OR (SELECT MAX(PRICE) -
					 (SELECT MIN(PRICE)
						FROM RATING
						WHERE RATING.USERID = R.USERID
									AND R3.RESTAURANTID = RATING.RESTAURANTID)
		FROM RATING
		WHERE RATING.USERID = R.USERID
					AND R3.RESTAURANTID = RATING.RESTAURANTID) >= 2
OR (SELECT MAX(MOOD) -
					 (SELECT MIN(MOOD)
						FROM RATING
						WHERE RATING.USERID = R.USERID
									AND R3.RESTAURANTID = RATING.RESTAURANTID)
		FROM RATING
		WHERE RATING.USERID = R.USERID
					AND R3.RESTAURANTID = RATING.RESTAURANTID) >= 2
OR (SELECT MAX(STAFF) -
					 (SELECT MIN(STAFF)
						FROM RATING
						WHERE RATING.USERID = R.USERID
									AND R3.RESTAURANTID = RATING.RESTAURANTID)
		FROM RATING
		WHERE RATING.USERID = R.USERID
					AND R3.RESTAURANTID = RATING.RESTAURANTID) >= 2;
